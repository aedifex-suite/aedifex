import _Config from 'models/_Config'

class {
  onCreate(input) {
    if (_Config.settings.sections[input.class] === undefined) {
      _Config.settings.sections[input.class] = input.default === 'closed' ? false : true
    }
    this.state = {
      closed: _Config.settings.sections[input.class],
    }
  }
  onDestroy() {
    _Config.settings.sections[this.input.class] = this.state.closed
  }
  onToggle(e) {
    this.state.closed = !this.state.closed
    _Config.settings.sections[this.input.class] = this.state.closed
  }
  onKeyup(e) {
    if (document.activeElement !== this.getEl('heading')) {
      e.preventDefault()
    }
  }
}

style {
  .Section {
    padding: .5em;
    overflow: hidden;
  }
  .Section__heading {
    user-select: none;
    cursor: pointer;
    display: grid;
    grid-template-columns: 2em minmax(0, 1fr);
  }
  .Section__content {
    padding: .5em;
    transition: all .5s ease;
  }
  .Section.-open > .Section__content {
    max-height: 100vh;
  }
  .Section.-closed > .Section__content {
    max-height: 0;
    padding: 0;
    overflow: hidden;
  }
}

div.Section key='section' class=[input.class, !state.closed?'-open':'-closed']
  div.Section__heading key='heading' on-click('onToggle') key='heading' on-keyup('onKeyup')
    div.Section__heading__control
      if(state.closed)
        -- ▶
      else
        -- ▼
    div.Section__heading__content
      <${input.heading}/>
      if(!state.closed)
        <${input.heading_open}/>
      else
        <${input.heading_closed}/>
  div.Section__content
    <${input.content}/>
