class {
  onCreate() {
    this.state = {
      editId: '',
      editValue: '',
    }
  }
  selectFile(item, index, e) {
    this.emit('select', item, index)
  }
  closeFile(item, index, e) {
    e.stopPropagation()
    this.emit('close', item, index)
  }
  onDoubleclick(item, index, e) {
    this.state.editId = item.id
    this.state.editValue = item.title
    setTimeout(_=> {
      this.getEl('input').focus()
    }, 0)
  }
  onInputBlur(item, index, e) {
    if (e.target.value !== item.title) {
      this.emit('rename', item, index, e.target.value)
    }
    this.state.editId = ''
    this.state.editValue = ''
  }
  onInputKeyup(item, index, e) {
    if (e.key === 'Enter') {
      e.target.blur()
    } else if (e.key === 'Escape') {
      e.target.value = item.title
      e.target.blur()
    }
  }
}
style {
  .Tabs {
    display: grid;
    grid-template-rows: auto minmax(0, 1fr);
    grid-template-columns: minmax(0, 1fr);
  }
  .Tabs__List {
    display: flex;
    list-style: none;
    padding: 0; margin: 0;
    user-select: none;
    background: var(--tabs-bg);
  }
  .Tabs__List__Item {
    padding: 0; margin: 0;
    display: flex;
    align-items: center;
    padding: .15em .5em;
    border-left: 1px solid var(--content-bg);
    border-right: 1px solid var(--content-bg);
    background: var(--tab-bg);
    font-size: 13px;
    color: var(--tab-fg);
    cursor: pointer;
    border: 0;
    border-top: 2px solid transparent;
  }
  .Tabs__List__Item__Close {
    transition: opacity .1s;
    opacity: 0;
    min-width: 1em;
    min-height: 1em;
  }
  .Tabs__List__Item:hover .Tabs__List__Item__Close {
    opacity: 1.0;
  }
  .Tabs__List__Item.-selected .Tabs__List__Item__Close {
    opacity: 1.0;
  }
  .Tabs__List__Item__Title {
    padding: .25em .5em;
  }
  .Tabs__List__Item.-selected {
    background: var(--content-bg);
    border-top: var(--tab-border--selected);
    color: var(--tab-fg--selected);
  }
  .Tabs__Content {
    display: grid;
    grid-template-rows: minmax(0, 1fr);
    grid-template-columns: minmax(0, 1fr);
    background: var(--content-bg);
  }
}

div.Tabs
  ul.Tabs__List
    for|item, index| of=input.tabs
      li.Tabs__List__Item class=[
        item.id === input.selected ? '-selected' : null,
      ] on-click('selectFile', item, index)
        if(item.icon)
          img.Tabs__List__Item__Icon src='assets/'+item.icon
        if(state.editId === item.id)
          input.Tabs__List__Item__Title key='input' value=item.title on-blur('onInputBlur', item, index) on-keyup('onInputKeyup', item, index)
        else
          span.Tabs__List__Item__Title on-dblclick('onDoubleclick', item, index) -- ${item.title}
        span.Tabs__List__Item__Close on-click('closeFile', item, index) -- &times;
  div.Tabs__Content
    <${input.renderBody}/>
