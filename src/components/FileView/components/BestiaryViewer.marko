import * as utils from 'utils/utils'
import * as dd from 'dot-dotty'

class {
  onCreate(input) {
    this.onFileUpdate = this.onFileUpdate.bind(this)
    if (input.file) {
      input.file.on('change', this.onFileUpdate)
      input.file.on('undo', this.onFileUpdate)
      input.file.on('redo', this.onFileUpdate)
    }
  }
  onDestroy() {
    if (this.input) {
      input.file.off('change', this.onFileUpdate)
      input.file.off('undo', this.onFileUpdate)
      input.file.off('redo', this.onFileUpdate)
    }
  }
  onFileUpdate() {
    this.forceUpdate()
  }
}

style {
  .AbilityScores {
  }
  .AbilityScores__item {
  }
  .AbilityScores__item__name {
    font-weight: bold;
    text-transform: capitalize;
  }
  .AbilityScores__item__value {
  }
}

$ let dot = dd(input.file, {throwErrors: false, prefix: 'state.'})
section
  h1 -- ${dot['name']} CR ${dot['cr']||'-'} 
  div.XP
    label -- XP
    span -- ${dot['xp']||'-'}
  if(dot['class'])
    div.Class
  div.AlignmentSizeTypes
    span.Alignment -- ${dot['alignment']}
    span.Size -- ${dot['size']}
    span.Types -- ${dot['creature-type']} ${dot['race']?`(${dot['race']})`:''}
  div
    label -- Init
      span -- ${dot['init']};
    span -- Senses
      if(dot['senses'])
        for|sense, index| of=dot['senses']
          span -- ${sense.name} ${sense.value} ft.${(index!==dot['senses'].length-1)?',':''}
        span -- ;
      if(dot['skills.Perception']!==undefined)
        span -- Perception ${dot['skills.Perception']>0?'+':'-'} ${dot['skills.Perception']}
section
  h2 -- Defense
  div -- AC
  $ let [hp, hpErr] = utils.averageHP(dot['hitdice'], dot['hitpips'])
  $ let [lvlhps, lvlhpsErr] = [[],[]]
  for|level| of=dot['levels']
    $ let [lvlhp, lvlhpErr] = utils.averageHP(level.level, level.hitpips)
    $ lvlhps.push(lvlhp)
    $ lvlhpsErr.push(lvlhpErr)
  $ let [conhp, conhpErr] = utils.conHP(dot['core.hd']+(dot['levels'].reduce((a,b)=>a+b.level,0)), dot['ability scores.con.value'])
  div
    span -- HP ${hp+conhp+lvlhps.reduce((a,b)=>a+b,0)}
    span -- (
      span -- ${dot['hitdice']}d${dot['hitpips']}+${conhp}
      if(dot['levels'] && dot['levels'].length > 0)
        for|level| of=dot['levels']
          span -- +${level.level}d${level.hitpips}
    span -- )
  div -- Fort ${Math.floor((dot['ability scores.con.value']-10)/2)}, Reflex, Will
section
  h2 -- Statistics
  if(dot['ability scores'])
    div.AbilityScores__item
      for|entry, index| of=Object.entries(dot['ability scores'])
        span.AbilityScores__item
          $ let key = entry[0], value = entry[1]
          span.AbilityScores__item__name -- ${key}&#32; 
          span.AbilityScores__item__value -- ${value.value}
          if(index !== Object.entries(dot['ability scores']).length-1)
            span -- ,&nbsp;
