import * as dd from 'dot-dotty'

class {
  onCreate(input) {
    this.state = {
      warnings: {},
      errors: {},
    }
    this.onFileUpdate = this.onFileUpdate.bind(this)
    if (input.file) {
      input.file.on('change', this.onFileUpdate)
      input.file.on('undo', this.onFileUpdate)
      input.file.on('redo', this.onFileUpdate)
      this.dot = dd(input.file, {
        throwErrors: false,
      })
    }
  }
  onDestroy() {
    if (this.input) {
      input.file.off('change', this.onFileUpdate)
      input.file.off('undo', this.onFileUpdate)
      input.file.off('redo', this.onFileUpdate)
    }
  }
  onFileUpdate() {
    this.forceUpdate()
  }
  updateAbilityScore(which, e) {
    let d = this.dot
    let k = `state.ability scores.${which}.value`
    let v = Number(e.target.value)
    if (d[k] === undefined) return
    if (v < 0) {
      this.state.errors[k] = 'cannot be less than 0'
    } else {
      delete this.state.errors[k]
    }
    d[k] = v
  }
  updateField(which, e) {
    let d = this.dot
    let k = `state.${which}`
    if (which === 'hitdice') {
      let v = Number(e.target.value)
      if (v < 0) {
        this.state.errors[k] = 'cannot be less than 0'
        return
      } else {
        delete this.state.errors
      }
      d[k] = v
    } else if (which === 'hitpips') {
      let v = Number(e.target.value)
      if (v < 0) {
        this.state.errors[k] = 'cannot be less than 0'
        return
      } else {
        delete this.state.errors
      }
      d[k] = v
    }
  }
}

style {
  .Editor__Entry {
    display: block;
  }
  .Editor__Entry.-errors {
    background: rgba(255,0,0,0.5);
  }
  .Editor__Entry__name {
    display: inline-block;
    min-width: 7em;
  }
  .Editor__Entry__input {
  }
  .Editor__Statistics .Editor__Entry__input {
    width: 3em;
  }
}

$ let d = component.dot
section.Editor__Core
  h2 -- Core
  label.Editor__Entry
    span.Editor__Entry__name -- HD
    input.Editor__Entry__input type='number' value=d['state.hitdice'] size=4 on-change('updateField', 'hitdice')
    span.Editor__Entry__name -- d
    select.Editor__Entry__input name='die' id='die' on-change('updateField', 'hitpips')
      for|value| of=[4,6,8,10,12]
        option value=value selected=d['state.hitpips']===value -- ${value}
  Section class="Editor__Levels" default='closed'
    @heading
      span -- Levels
    @content
      button -- +
Section class="Editor__Statistics" default='open'
  @heading
    span -- Statistics
  @content
    label.Editor__Entry.AbilityScore class=[state.errors['state.ability scores.str.value']?'-errors':null]
      span.Editor__Entry__name -- Strength
      input.Editor__Entry__input type='number' value=d['state.ability scores.str.value'] size=4 on-change('updateAbilityScore', 'str')
    label.Editor__Entry.AbilityScore class=[state.errors['state.ability scores.dex.value']?'-errors':null]
      span.Editor__Entry__name -- Dexterity
      input.Editor__Entry__input type='number' value=d['state.ability scores.dex.value'] size=4 on-change('updateAbilityScore', 'dex')
    label.Editor__Entry.AbilityScore class=[state.errors['state.ability scores.con.value']?'-errors':null]
      span.Editor__Entry__name -- Constitution
      input.Editor__Entry__input type='number' value=d['state.ability scores.con.value'] size="4" on-change('updateAbilityScore', 'con')
    label.Editor__Entry.AbilityScore class=[state.errors['state.ability scores.wis.value']?'-errors':null]
      span.Editor__Entry__name -- Wisdom
      input.Editor__Entry__input type='number' value=d['state.ability scores.wis.value'] size="4" on-change('updateAbilityScore', 'wis')
    label.Editor__Entry.AbilityScore class=[state.errors['state.ability scores.int.value']?'-errors':null]
      span.Editor__Entry__name -- Intelligence
      input.Editor__Entry__input type='number' value=d['state.ability scores.int.value'] size="4" on-change('updateAbilityScore', 'int')
    label.Editor__Entry.AbilityScore class=[state.errors['state.ability scores.cha.value']?'-errors':null]
      span.Editor__Entry__name -- Charisma
      input.Editor__Entry__input type='number' value=d['state.ability scores.cha.value'] size="4" on-change('updateAbilityScore', 'cha')
